openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /shopping/add-item/{shoppingCartItem}:
    post:
      tags:
        - shopping-cart-controller
      operationId: addItemToShoppingCart
      parameters:
        - name: shoppingCartItem
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShoppingCartResponse"
  /payments/stripe/webhooks:
    post:
      tags:
        - payment-controller
      operationId: confirmation
      parameters:
        - name: Stripe-Signature
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
  /payments/checkout:
    post:
      tags:
        - payment-controller
      operationId: checkout
      parameters:
        - name: paymentRequest
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/PaymentRequest"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
  /content/quiz/solution/{contentId}:
    post:
      tags:
        - content-controller
      operationId: checkSolutionForQuiz
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizSolutionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/QuizSolutionResponse"
  /content/code/scratch-solution/{contentId}:
    post:
      tags:
        - content-controller
      operationId: runSolutionFor
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeSolutionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CodeSolutionResponse"
  /content/code/code-quiz-solution/{contentId}:
    post:
      tags:
        - content-controller
      operationId: checkCodeQuizSolutionFor
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeQuizSolutionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CodeQuizSolutionResponse"
  /auth/register:
    post:
      tags:
        - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: OK
  /auth/refresh:
    post:
      tags:
        - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
  /auth/logout:
    post:
      tags:
        - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
  /auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LoginResponse"
  /auth/force-logout:
    post:
      tags:
        - auth-controller
      operationId: forceLogout
      responses:
        "200":
          description: OK
  /sync:
    get:
      tags:
        - sync-controller
      operationId: sync
      responses:
        "200":
          description: OK
  /shopping/restore-shopping-cart:
    get:
      tags:
        - shopping-cart-controller
      operationId: restoreShoppingCart
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShoppingCartResponse"
  /shopping/available-shopping-items:
    get:
      tags:
        - shopping-cart-controller
      operationId: getAvailableShoppingItems
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GetAvailableShoppingItemsResponse"
  /payments:
    get:
      tags:
        - payment-controller
      operationId: getPreviousPayments
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PreviousPaymentsResponse"
  /content/my-content-bundles:
    get:
      tags:
        - content-controller
      operationId: getMyContentBundles
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MyContentBundlesResponse"
  /content/my-content-bundles/separated:
    get:
      tags:
        - content-controller
      operationId: getMyContentBundlesSeparated
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MyContentBundlesSeparatedResponse"
  /shopping/delete-item/{shoppingCartItem}:
    delete:
      tags:
        - shopping-cart-controller
      operationId: removeItemFromShoppingCart
      parameters:
        - name: shoppingCartItem
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShoppingCartResponse"
components:
  schemas:
    MinimalContentBundleResponse:
      type: object
      properties:
        includedContent:
          type: array
          items:
            $ref: "#/components/schemas/MinimalContentResponse"
    MinimalContentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
    ShoppingCartResponse:
      type: object
      properties:
        shoppingItems:
          type: array
          items:
            $ref: "#/components/schemas/ShoppingItemResponse"
    ShoppingItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        price:
          type: number
          format: double
        contentBundle:
          $ref: "#/components/schemas/MinimalContentBundleResponse"
    PaymentRequest:
      type: object
      properties:
        successUrl:
          type: string
        cancelUrl:
          type: string
    QuizSolutionRequest:
      required:
        - solutions
      type: object
      properties:
        solutions:
          type: object
          additionalProperties:
            type: integer
            format: int32
    IncorrectQuizSolutionResponse:
      type: object
      properties:
        incorrectQuestionId:
          type: integer
          format: int32
        incorrectSolutionSent:
          type: integer
          format: int32
        correctSolution:
          type: integer
          format: int32
    QuizSolutionResponse:
      type: object
      properties:
        correctAnswerQuestionIds:
          type: array
          items:
            type: integer
            format: int32
        incorrectSolutions:
          type: array
          items:
            $ref: "#/components/schemas/IncorrectQuizSolutionResponse"
    CodeSolutionRequest:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 32768
          minLength: 0
          type: string
    CodeSolutionResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/TestCaseOutcomeResponse"
        overallResult:
          type: string
          enum:
            - ALL_PASSED
            - TESTCASES_FAILED
    TestCaseOutcomeResponse:
      type: object
      properties:
        expected:
          type: string
        actual:
          type: string
        outcome:
          type: string
          enum:
            - PASSED
            - FAILED
        hints:
          type: array
          items:
            type: string
    CodeQuizSolutionRequest:
      required:
        - solutionsByIndex
      type: object
      properties:
        solutionsByIndex:
          type: object
          additionalProperties:
            type: string
    CodeQuizSolutionResponse:
      type: object
      properties:
        correctAnswerIndices:
          type: array
          items:
            type: integer
            format: int32
        incorrectSolutions:
          type: array
          items:
            $ref: "#/components/schemas/IncorrectCodeQuizSolutionResponse"
    IncorrectCodeQuizSolutionResponse:
      type: object
      properties:
        incorrectSolutionIndex:
          type: integer
          format: int32
        incorrectAnswer:
          type: string
        correctSolution:
          type: string
    RegisterRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 4
          type: string
        password:
          maxLength: 60
          minLength: 8
          type: string
    RefreshTokenRequest:
      required:
        - refreshToken
      type: object
      properties:
        refreshToken:
          type: string
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 4
          type: string
        password:
          maxLength: 60
          minLength: 8
          type: string
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    GetAvailableShoppingItemsResponse:
      type: object
      properties:
        shoppingItems:
          type: array
          items:
            $ref: "#/components/schemas/ShoppingItemResponse"
    ContentBundleResponse:
      type: object
      properties:
        includedContent:
          type: array
          items:
            $ref: "#/components/schemas/ContentResponse"
    ContentResponse:
      type: object
      properties:
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
    PaymentResponse:
      type: object
      properties:
        pricePayed:
          type: number
          format: double
        boughtContentBundles:
          type: array
          items:
            $ref: "#/components/schemas/ContentBundleResponse"
    PreviousPaymentsResponse:
      type: object
      properties:
        previousPayments:
          type: array
          items:
            $ref: "#/components/schemas/PaymentResponse"
    MyContentBundlesResponse:
      type: object
      properties:
        contentBundles:
          type: array
          items:
            $ref: "#/components/schemas/ContentBundleResponse"
    CodingContentResponse:
      type: object
      properties:
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
        id:
          type: integer
          format: int32
        description:
          type: string
        codeSkeleton:
          type: array
          items:
            type: string
        codeSnippets:
          type: array
          items:
            type: string
        testCases:
          type: array
          items:
            $ref: "#/components/schemas/TestCaseResponse"
        codingContentType:
          type: string
          enum:
            - SCRATCH
            - DRAG_AND_DROP
            - FILL_THE_GAP
    MyContentBundlesSeparatedResponse:
      type: object
      properties:
        contentBundles:
          type: array
          items:
            $ref: "#/components/schemas/SeparatedContentBundleResponse"
    QuizContentResponse:
      type: object
      properties:
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
        id:
          type: integer
          format: int32
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuizQuestionResponse"
    QuizQuestionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        question:
          type: string
        answers:
          type: array
          items:
            type: string
        solutionIndex:
          type: integer
          format: int32
        solutionChar:
          type: string
    SeparatedContentBundleResponse:
      type: object
      properties:
        includedVideos:
          type: array
          items:
            $ref: "#/components/schemas/VideoContentResponse"
        includedCodings:
          type: array
          items:
            $ref: "#/components/schemas/CodingContentResponse"
        includedQuizzes:
          type: array
          items:
            $ref: "#/components/schemas/QuizContentResponse"
    TestCaseResponse:
      type: object
      properties:
        input:
          type: string
        expectedOutput:
          type: string
    VideoContentResponse:
      type: object
      properties:
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
        description:
          type: string
        resourceUrl:
          type: string
