openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://api.bence.kovacs.host
    description: Generated server url
paths:
  /shopping/add-item/{shoppingCartItem}:
    post:
      tags:
        - shopping-cart-controller
      operationId: addItemToShoppingCart
      parameters:
        - name: shoppingCartItem
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShoppingCartResponse"
  /payments/stripe/webhooks:
    post:
      tags:
        - payment-controller
      operationId: confirmation
      parameters:
        - name: Stripe-Signature
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
  /payments/checkout:
    post:
      tags:
        - payment-controller
      operationId: checkout
      parameters:
        - name: paymentRequest
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/PaymentRequest"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
  /content/ratings/{contentBundleId}:
    post:
      tags:
        - ratings-controller
      operationId: submitRating
      parameters:
        - name: contentBundleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingRequest"
        required: true
      responses:
        "200":
          description: OK
  /content/quiz/solution/{contentId}:
    post:
      tags:
        - content-controller
      operationId: checkSolutionForQuiz
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizSolutionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/QuizSolutionResponse"
  /content/code/scratch-solution/{contentId}:
    post:
      tags:
        - content-controller
      operationId: runSolutionFor
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeSolutionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CodeSolutionResponse"
  /content/code/code-quiz-solution/{contentId}:
    post:
      tags:
        - content-controller
      operationId: checkCodeQuizSolutionFor
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeQuizSolutionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CodeQuizSolutionResponse"
  /auth/reset-password:
    post:
      tags:
        - auth-controller
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
        required: true
      responses:
        "200":
          description: OK
  /auth/register:
    post:
      tags:
        - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: OK
  /auth/refresh:
    post:
      tags:
        - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
  /auth/logout:
    post:
      tags:
        - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
  /auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LoginResponse"
  /auth/forgot-password:
    post:
      tags:
        - auth-controller
      operationId: forgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
        required: true
      responses:
        "200":
          description: OK
  /auth/force-logout:
    post:
      tags:
        - auth-controller
      operationId: forceLogout
      responses:
        "200":
          description: OK
  /auth/change-password:
    post:
      tags:
        - auth-controller
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
        required: true
      responses:
        "200":
          description: OK
  /:
    get:
      tags:
        - profile-controller
      operationId: getProfileInfo
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ProfileResponse"
  /sync:
    get:
      tags:
        - sync-controller
      operationId: sync
      responses:
        "200":
          description: OK
  /shopping/shopping-cart:
    get:
      tags:
        - shopping-cart-controller
      operationId: restoreShoppingCart
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShoppingCartResponse"
  /shopping/available-shopping-items:
    get:
      tags:
        - shopping-cart-controller
      operationId: getAvailableShoppingItems
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 3
        - name: skills
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: title
          in: query
          required: false
          schema:
            type: string
            default: ""
        - name: sort
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/SortObject"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PageShoppingItemResponse"
  /payments:
    get:
      tags:
        - payment-controller
      operationId: getPreviousPayments
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PreviousPaymentsResponse"
  /content/content-bundles:
    get:
      tags:
        - content-controller
      operationId: getMyContentBundles
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PageMinimalContentBundleResponse"
  /content/content-bundles/{contentBundleId}:
    get:
      tags:
        - content-controller
      operationId: getMyContentBundle
      parameters:
        - name: contentBundleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SeparatedContentBundleResponse"
  /shopping/delete-item/{shoppingCartItem}:
    delete:
      tags:
        - shopping-cart-controller
      operationId: removeItemFromShoppingCart
      parameters:
        - name: shoppingCartItem
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShoppingCartResponse"
components:
  schemas:
    MinimalContentBundleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        includedContent:
          type: array
          items:
            $ref: "#/components/schemas/MinimalContentResponse"
        title:
          type: string
        imageUrl:
          type: string
        skillLevel:
          type: string
          enum:
            - BEGINNER
            - INTERMEDIATE
            - ADVANCED
        ratings:
          $ref: "#/components/schemas/RatingsResponse"
        releaseDate:
          type: string
          format: date-time
    MinimalContentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
    RatingResponse:
      type: object
      properties:
        rating:
          type: integer
          format: int32
        comment:
          type: string
        username:
          type: string
        createdAt:
          type: string
          format: date-time
    RatingsResponse:
      type: object
      properties:
        averageRating:
          type: number
          format: double
        numberOfRatings:
          type: integer
          format: int32
        ratings:
          type: array
          items:
            $ref: "#/components/schemas/RatingResponse"
    ShoppingCartResponse:
      type: object
      properties:
        shoppingItems:
          type: array
          items:
            $ref: "#/components/schemas/ShoppingItemResponse"
    ShoppingItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        price:
          type: number
          format: double
        numberOfPurchases:
          type: integer
          format: int64
        contentBundle:
          $ref: "#/components/schemas/MinimalContentBundleResponse"
        ratings:
          $ref: "#/components/schemas/RatingsResponse"
    PaymentRequest:
      type: object
      properties:
        successUrl:
          type: string
        cancelUrl:
          type: string
    RatingRequest:
      required:
        - comment
        - rating
      type: object
      properties:
        rating:
          type: integer
          format: int32
        comment:
          maxLength: 50
          minLength: 1
          type: string
    QuizSolutionRequest:
      required:
        - solutions
      type: object
      properties:
        solutions:
          type: object
          additionalProperties:
            type: integer
            format: int32
    IncorrectQuizSolutionResponse:
      type: object
      properties:
        incorrectQuestionId:
          type: integer
          format: int32
        incorrectSolutionSent:
          type: integer
          format: int32
        correctSolution:
          type: integer
          format: int32
    QuizSolutionResponse:
      type: object
      properties:
        correctAnswerQuestionIds:
          type: array
          items:
            type: integer
            format: int32
        incorrectSolutions:
          type: array
          items:
            $ref: "#/components/schemas/IncorrectQuizSolutionResponse"
    CodeSolutionRequest:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 32768
          minLength: 0
          type: string
    CodeSolutionResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/TestCaseOutcomeResponse"
        overallResult:
          type: string
          enum:
            - ALL_PASSED
            - TESTCASES_FAILED
    TestCaseOutcomeResponse:
      type: object
      properties:
        expected:
          type: string
        actual:
          type: string
        outcome:
          type: string
          enum:
            - PASSED
            - FAILED
        hints:
          type: array
          items:
            type: string
    CodeQuizSolutionRequest:
      required:
        - solutionsByIndex
      type: object
      properties:
        solutionsByIndex:
          type: object
          additionalProperties:
            type: string
    CodeQuizSolutionResponse:
      type: object
      properties:
        correctAnswerIndices:
          type: array
          items:
            type: integer
            format: int32
        incorrectSolutions:
          type: array
          items:
            $ref: "#/components/schemas/IncorrectCodeQuizSolutionResponse"
    IncorrectCodeQuizSolutionResponse:
      type: object
      properties:
        incorrectSolutionIndex:
          type: integer
          format: int32
        incorrectAnswer:
          type: string
        correctSolution:
          type: string
    ResetPasswordRequest:
      required:
        - password
      type: object
      properties:
        password:
          maxLength: 60
          minLength: 8
          type: string
    RegisterRequest:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 4
          type: string
        password:
          maxLength: 60
          minLength: 8
          type: string
        email:
          maxLength: 100
          minLength: 8
          type: string
    RefreshTokenRequest:
      required:
        - refreshToken
      type: object
      properties:
        refreshToken:
          type: string
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 4
          type: string
        password:
          maxLength: 60
          minLength: 8
          type: string
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    ForgotPasswordRequest:
      required:
        - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 4
          type: string
    ChangePasswordRequest:
      required:
        - newPassword
        - oldPassword
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          maxLength: 60
          minLength: 8
          type: string
    ProfileResponse:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        registeredAt:
          type: string
          format: date-time
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
    PageShoppingItemResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/ShoppingItemResponse"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    ContentBundleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        includedContent:
          type: array
          items:
            $ref: "#/components/schemas/ContentResponse"
        imageUrl:
          type: string
        skillLevel:
          type: string
          enum:
            - BEGINNER
            - INTERMEDIATE
            - ADVANCED
        ratings:
          $ref: "#/components/schemas/RatingsResponse"
        releaseDate:
          type: string
          format: date-time
    ContentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
    PaymentResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - PENDING
            - PAID
            - FAILED
        boughtContentBundles:
          type: array
          items:
            $ref: "#/components/schemas/ContentBundleResponse"
    PreviousPaymentsResponse:
      type: object
      properties:
        previousPayments:
          type: array
          items:
            $ref: "#/components/schemas/PaymentResponse"
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageMinimalContentBundleResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/MinimalContentBundleResponse"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    CodingContentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
        description:
          type: string
        codeSkeleton:
          type: array
          items:
            type: string
        codeSnippets:
          type: array
          items:
            type: string
        testCases:
          type: array
          items:
            $ref: "#/components/schemas/TestCaseResponse"
        codingContentType:
          type: string
          enum:
            - SCRATCH
            - DRAG_AND_DROP
            - FILL_THE_GAP
    QuizContentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuizQuestionResponse"
    QuizQuestionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        question:
          type: string
        answers:
          type: array
          items:
            type: string
        solutionIndex:
          type: integer
          format: int32
        solutionChar:
          type: string
    SeparatedContentBundleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        imageUrl:
          type: string
        ratings:
          $ref: "#/components/schemas/RatingsResponse"
        includedVideos:
          type: array
          items:
            $ref: "#/components/schemas/VideoContentResponse"
        includedCodings:
          type: array
          items:
            $ref: "#/components/schemas/CodingContentResponse"
        includedQuizzes:
          type: array
          items:
            $ref: "#/components/schemas/QuizContentResponse"
    TestCaseResponse:
      type: object
      properties:
        input:
          type: string
        expectedOutput:
          type: string
    VideoContentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
        description:
          type: string
        resourceUrl:
          type: string
